@model IEnumerable<EWS.Domain.Model.SourceQuote>


@*<div class="pull-right bottom-gap-10">
    <a href="@Url.Action("Create")" class="btn btn-default throbber"><span class="glyphicon glyphicon-plus"></span>&nbsp;Add</a>
</div>*@
<div class="clearfix"></div>

<div class="container-fluid">
    <div class="bg-theme-l fg-dark medium pad5 bottom-gap-10"><h4>Quotes</h4></div>
    @if (Model.Count() > 0)
    { 
    <div class="row">
        <div class="col-xs-12 panel-heading">
                
            <span class="col-xs-1">&nbsp;</span>
            <span class="col-xs-1"><b>Ref</B></span>
            <span class="col-xs-1"><B>Date</B></span>
            <span class="col-xs-3"><B>Supplier</B></span>
            <span class="col-xs-3"><B>Device</B></span>
            <span class="col-xs-3"><b>Price</b></span>
        </div>

    </div>
    }
    else
    {
        <div class="row">
            Nothing found   
        </div>
    }
    @foreach (var item in Model)
    {
        @*<div class="row">
            <div class="col-xs-12">
                <div class="dropdown">
                    <a href="#fake" class="btn-link dropdown-toggle large fg-theme" data-toggle="dropdown" aria-expanded="true">
                        NAME
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                        <li role="presentation">
                            <a href="@Url.Action("Edit", new { /* id=item.PrimaryKey */ })" class="throbber"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&nbsp;Edit</a>
                        </li>
                        <li role="presentation">
                            <a href="@Url.Action("Details", new { /* id=item.PrimaryKey */ })" class="throbber"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>&nbsp;More Info</a>
                        </li>
                        <li role="presentation">
                            <a href="@Url.Action("Delete", new { /* id=item.PrimaryKey */ })" class="throbber"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>&nbsp;Delete</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>*@

    <div class="row">
        <div class="col-xs-12">
            
            <span class="col-xs-1">
                <input type="radio" name="radioQuoteRef" value="@item.QuoteRef" onclick="getRadioVal(this)"
                   @(item.Selected ? "checked" : "" )  > 
                @*@Html.RadioButtonFor(modelItem => item.QuoteRef, item.QuoteRef, new { @onclick = "getRadioVal(this)", @checked="" })*@
            </span>
            <span class="col-xs-1">@Html.DisplayFor(modelItem => item.QuoteRef)</span>
            <span class="col-xs-1">@Html.DisplayFor(modelItem => item.Date)</span>
            <span class="col-xs-3">@Html.DisplayFor(modelItem => item.Supplier)</span>
            <span class="col-xs-3">@Html.DisplayFor(modelItem => item.DeviceDescription)</span>
            <span class="col-xs-2">@Html.DisplayFor(modelItem => item.SellingPriceInclVAT)</span>
        </div>
    </div>

    }   
</div>
<script>
    function getRadioVal(element) {

        //alert(element.name + ': ' + element.value);
        //var val;
        //// get list of radio buttons with specified name
        var textboxes = document.getElementsByName("QuoteRef");

        //// loop through list of radio buttons
        for (var i = 0, len = textboxes.length; i < len; i++) {
            textboxes[i].value = element.value;
         
        }
        //return val; // return value of checked radio or undefined if none checked
    }
</script>
