<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="pull-right bottom-gap-10">
    <a href="@Url.Action("Create")" class="btn btn-default throbber" ><span class="glyphicon glyphicon-plus"></span>&nbsp;Add</a>
</div>
<div class="clearfix"></div>

<div class="container-fluid">
	<div class="bg-theme-l fg-dark medium pad5 bottom-gap-10">Results</div>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
#>
@foreach (var item in Model) {
    <div class="row">
		<div class="col-xs-12">
			<div class="dropdown">
				<a href="#fake" class="btn-link dropdown-toggle large fg-theme" data-toggle="dropdown" aria-expanded="true">
					NAME
					<span class="caret"></span>
				</a>
				<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
<#
	string pkName = GetPrimaryKeyName();
	if (pkName != null) {
#>
					<li role="presentation">
						<a href="@Url.Action("Edit", new { id=item.<#= pkName #> })" class="throbber"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&nbsp;Edit</a>
					</li>
					<li role="presentation">
						<a href="@Url.Action("Details", new { id=item.<#= pkName #> })" class="throbber"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>&nbsp;More Info</a>
					</li>
					<li role="presentation">
						<a href="@Url.Action("Delete", new { id=item.<#= pkName #> })" class="throbber"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>&nbsp;Delete</a>
					</li>
<#
	} else {
#>
					<li role="presentation">
						<a href="@Url.Action("Edit", new { /* id=item.PrimaryKey */ })" class="throbber"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&nbsp;Edit</a>
					</li>
					<li role="presentation">
						<a href="@Url.Action("Details", new { /* id=item.PrimaryKey */ })" class="throbber"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>&nbsp;More Info</a>
					</li>
					<li role="presentation">
						<a href="@Url.Action("Delete", new { /* id=item.PrimaryKey */ })" class="throbber"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>&nbsp;Delete</a>
					</li>
<#
	}
#>
				</ul>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-xs-12">
<#
	foreach (PropertyMetadata property in properties) {
	    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
			// We do not want to show any association properties for which there is
	        // no associated foreign key.
	        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
	            continue;
	        }
#>
        @Html.LabelFor(modelItem => <#= "item." + GetValueExpression(property) #>): @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>) | 
<#
		}
	}
#>
			<hr />
		</div>
	</div>

}
</div>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>